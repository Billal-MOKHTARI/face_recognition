# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GUI/RF.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from ctypes.wintypes import WORD
import encodings
from msilib.schema import RadioButton
import os
import pathlib
import platform
import shutil
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog, QMessageBox
from functions import WINDOWS
from main import main
from functions import *
from config import *

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        """Variable decalaration"""
        self.listWidget = []
        self.listLayout = []
        self.listButton = []

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1199, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.tab = QtWidgets.QTabWidget(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.tab.setFont(font)
        self.tab.setObjectName("tab")
        self.conf = QtWidgets.QWidget()
        self.conf.setObjectName("conf")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.conf)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.formLayout = QtWidgets.QFormLayout()
        self.formLayout.setObjectName("formLayout")
        self.labelCam = QtWidgets.QLabel(self.conf)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.labelCam.setFont(font)
        self.labelCam.setObjectName("labelCam")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.labelCam)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.radioButtonIP = QtWidgets.QRadioButton(self.conf)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButtonIP.setFont(font)
        self.radioButtonIP.setObjectName("radioButtonIP")
        self.horizontalLayout.addWidget(self.radioButtonIP)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem1)
        self.lineEditIP = QtWidgets.QLineEdit(self.conf)
        self.lineEditIP.setEnabled(False)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lineEditIP.setFont(font)
        self.lineEditIP.setObjectName("lineEditIP")
        self.horizontalLayout.addWidget(self.lineEditIP)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem2)
        self.radioButtonCamID = QtWidgets.QRadioButton(self.conf)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.radioButtonCamID.setFont(font)
        self.radioButtonCamID.setChecked(True)
        self.radioButtonCamID.setObjectName("radioButtonCamID")
        self.horizontalLayout.addWidget(self.radioButtonCamID)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem3)
        self.spinBoxCameraID = QtWidgets.QSpinBox(self.conf)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.spinBoxCameraID.setFont(font)
        self.spinBoxCameraID.setObjectName("spinBoxCameraID")
        self.horizontalLayout.addWidget(self.spinBoxCameraID)
        self.formLayout.setLayout(1, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout)
        self.flipCameraLabel = QtWidgets.QLabel(self.conf)
        self.flipCameraLabel.setObjectName("flipCameraLabel")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.flipCameraLabel)
        self.flipCameraCheckBox = QtWidgets.QCheckBox(self.conf)
        self.flipCameraCheckBox.setMouseTracking(True)
        self.flipCameraCheckBox.setStyleSheet("margin-left:40px")
        self.flipCameraCheckBox.setObjectName("flipCameraCheckBox")
        self.flipCameraCheckBox.setChecked(FLIP_CAM)
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.flipCameraCheckBox)
        self.verticalLayout.addLayout(self.formLayout)

        spacerItem4 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.verticalLayout.addItem(spacerItem4)
        self.groupBoxDesign = QtWidgets.QGroupBox(self.conf)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.groupBoxDesign.setFont(font)
        self.groupBoxDesign.setObjectName("groupBoxDesign")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.groupBoxDesign)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.formLayout_2 = QtWidgets.QFormLayout()
        self.formLayout_2.setObjectName("formLayout_2")
        self.labelBBoxColor = QtWidgets.QLabel(self.groupBoxDesign)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.labelBBoxColor.setFont(font)
        self.labelBBoxColor.setObjectName("labelBBoxColor")
        self.formLayout_2.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.labelBBoxColor)
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setContentsMargins(20, -1, -1, -1)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.spinBoxNormalRed = QtWidgets.QSpinBox(self.groupBoxDesign)
        self.spinBoxNormalRed.setAlignment(QtCore.Qt.AlignCenter)
        self.spinBoxNormalRed.setMaximum(255)
        self.spinBoxNormalRed.setValue(NORMAL_COLOR[2])
        self.spinBoxNormalRed.setObjectName("spinBoxNormalRed")
        self.horizontalLayout_2.addWidget(self.spinBoxNormalRed)
        self.spinBoxNormalGreen = QtWidgets.QSpinBox(self.groupBoxDesign)
        self.spinBoxNormalGreen.setAlignment(QtCore.Qt.AlignCenter)
        self.spinBoxNormalGreen.setSuffix("")
        self.spinBoxNormalGreen.setMaximum(255)
        self.spinBoxNormalGreen.setValue(NORMAL_COLOR[1])
        self.spinBoxNormalGreen.setObjectName("spinBoxNormalGreen")
        self.horizontalLayout_2.addWidget(self.spinBoxNormalGreen)
        self.spinBoxNormalBlue = QtWidgets.QSpinBox(self.groupBoxDesign)
        self.spinBoxNormalBlue.setAlignment(QtCore.Qt.AlignCenter)
        self.spinBoxNormalBlue.setMaximum(255)
        self.spinBoxNormalBlue.setValue(NORMAL_COLOR[0])
        self.spinBoxNormalBlue.setObjectName("spinBoxNormalBlue")
        self.horizontalLayout_2.addWidget(self.spinBoxNormalBlue)
        self.formLayout_2.setLayout(1, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_2)

        self.labelBBoxUnknownFaceColor = QtWidgets.QLabel(self.groupBoxDesign)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.labelBBoxUnknownFaceColor.setFont(font)
        self.labelBBoxUnknownFaceColor.setObjectName("labelBBoxUnknownFaceColor")
        self.formLayout_2.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.labelBBoxUnknownFaceColor)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setContentsMargins(20, -1, -1, -1)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.spinBoxUnknownRed = QtWidgets.QSpinBox(self.groupBoxDesign)
        self.spinBoxUnknownRed.setAlignment(QtCore.Qt.AlignCenter)
        self.spinBoxUnknownRed.setMaximum(255)
        self.spinBoxUnknownRed.setValue(UNKNOWN_COLOR[2])
        self.spinBoxUnknownRed.setObjectName("spinBoxUnknownRed")
        self.horizontalLayout_3.addWidget(self.spinBoxUnknownRed)
        self.spinBoxUnknownGreen = QtWidgets.QSpinBox(self.groupBoxDesign)
        self.spinBoxUnknownGreen.setAlignment(QtCore.Qt.AlignCenter)
        self.spinBoxUnknownGreen.setMaximum(255)
        self.spinBoxUnknownGreen.setValue(UNKNOWN_COLOR[1])
        self.spinBoxUnknownGreen.setObjectName("spinBoxUnknownGreen")
        self.horizontalLayout_3.addWidget(self.spinBoxUnknownGreen)
        self.spinBoxUnknownBlue = QtWidgets.QSpinBox(self.groupBoxDesign)
        self.spinBoxUnknownBlue.setAlignment(QtCore.Qt.AlignCenter)
        self.spinBoxUnknownBlue.setMaximum(255)
        self.spinBoxUnknownBlue.setValue(UNKNOWN_COLOR[0])
        self.spinBoxUnknownBlue.setSingleStep(1)
        self.spinBoxUnknownBlue.setObjectName("spinBoxUnknownBlue")
        self.horizontalLayout_3.addWidget(self.spinBoxUnknownBlue)
        self.formLayout_2.setLayout(2, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_3)

        self.labelNameColor = QtWidgets.QLabel(self.groupBoxDesign)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.labelNameColor.setFont(font)
        self.labelNameColor.setObjectName("labelNameColor")
        self.formLayout_2.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.labelNameColor)
        self.horizontalLayout_nameColor = QtWidgets.QHBoxLayout()
        self.horizontalLayout_nameColor.setContentsMargins(20, -1, -1, -1)
        self.horizontalLayout_nameColor.setObjectName("horizontalLayout_nameColor")
        self.spinBoxNameRed = QtWidgets.QSpinBox(self.groupBoxDesign)
        self.spinBoxNameRed.setAlignment(QtCore.Qt.AlignCenter)
        self.spinBoxNameRed.setMaximum(255)
        self.spinBoxNameRed.setValue(NAME_COLOR[2])
        self.spinBoxNameRed.setObjectName("spinBoxNameRed")
        self.horizontalLayout_nameColor.addWidget(self.spinBoxNameRed)
        self.spinBoxNameGreen = QtWidgets.QSpinBox(self.groupBoxDesign)
        self.spinBoxNameGreen.setAlignment(QtCore.Qt.AlignCenter)
        self.spinBoxNameGreen.setMaximum(255)
        self.spinBoxNameGreen.setValue(NAME_COLOR[1])
        self.spinBoxNameGreen.setObjectName("spinBoxNameGreen")
        self.horizontalLayout_nameColor.addWidget(self.spinBoxNameGreen)
        self.spinBoxNameBlue = QtWidgets.QSpinBox(self.groupBoxDesign)
        self.spinBoxNameBlue.setAlignment(QtCore.Qt.AlignCenter)
        self.spinBoxNameBlue.setMaximum(255)
        self.spinBoxNameBlue.setValue(NAME_COLOR[0])
        self.spinBoxNameBlue.setSingleStep(1)
        self.spinBoxNameBlue.setObjectName("spinBoxNameBlue")
        self.horizontalLayout_nameColor.addWidget(self.spinBoxNameBlue)
        self.formLayout_2.setLayout(3, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_nameColor)

        self.screenWidthLabel = QtWidgets.QLabel(self.groupBoxDesign)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.screenWidthLabel.setFont(font)
        self.screenWidthLabel.setObjectName("screenWidthLabel")
        self.formLayout_2.setWidget(4, QtWidgets.QFormLayout.LabelRole, self.screenWidthLabel)
        self.screenWidthSpinBox = QtWidgets.QSpinBox(self.groupBoxDesign)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.screenWidthSpinBox.setFont(font)
        self.screenWidthSpinBox.setStyleSheet("margin-left:20px")
        self.screenWidthSpinBox.setAlignment(QtCore.Qt.AlignCenter)
        self.screenWidthSpinBox.setMinimum(256)
        self.screenWidthSpinBox.setMaximum(99999)
        self.screenWidthSpinBox.setProperty("value", WIDTH)
        self.screenWidthSpinBox.setObjectName("screenWidthSpinBox")
        self.formLayout_2.setWidget(4, QtWidgets.QFormLayout.FieldRole, self.screenWidthSpinBox)
        self.screenHeightLabel = QtWidgets.QLabel(self.groupBoxDesign)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.screenHeightLabel.setFont(font)
        self.screenHeightLabel.setObjectName("screenHeightLabel")
        self.formLayout_2.setWidget(5, QtWidgets.QFormLayout.LabelRole, self.screenHeightLabel)
        self.screenHeightSpinBox = QtWidgets.QSpinBox(self.groupBoxDesign)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.screenHeightSpinBox.setFont(font)
        self.screenHeightSpinBox.setStyleSheet("margin-left:20px")
        self.screenHeightSpinBox.setAlignment(QtCore.Qt.AlignCenter)
        self.screenHeightSpinBox.setMinimum(256)
        self.screenHeightSpinBox.setMaximum(99999)
        self.screenHeightSpinBox.setProperty("value", HEIGHT)
        self.screenHeightSpinBox.setObjectName("screenHeightSpinBox")
        self.formLayout_2.setWidget(5, QtWidgets.QFormLayout.FieldRole, self.screenHeightSpinBox)





        self.verticalLayout_4.addLayout(self.formLayout_2)
        self.verticalLayout.addWidget(self.groupBoxDesign)
        self.defaultConfigurationsButton = QtWidgets.QPushButton(self.conf)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.defaultConfigurationsButton.setFont(font)
        self.defaultConfigurationsButton.setObjectName("defaultConfigurationsButton")
        self.verticalLayout.addWidget(self.defaultConfigurationsButton)
        self.startButton = QtWidgets.QPushButton(self.conf)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.startButton.setFont(font)
        self.startButton.setObjectName("startButton")
        self.verticalLayout.addWidget(self.startButton)
        self.verticalLayout_3.addLayout(self.verticalLayout)
        self.tab.addTab(self.conf, "")
        self.faces = QtWidgets.QWidget()
        self.faces.setObjectName("faces")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.faces)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.verticalLayout_ = QtWidgets.QVBoxLayout()
        self.verticalLayout_.setObjectName("verticalLayout_")
        self.groupBoxVizualization = QtWidgets.QGroupBox(self.faces)

        self.faces.setStyleSheet(STYLE_QTAB_WIDGET_FACES)
        self.conf.setStyleSheet(STYLE_QTAB_WIDGET_CONF)
        self.centralwidget.setStyleSheet(STYLE_CENTRAL_WIDGET)


        self.groupBoxVizualization.setObjectName("groupBoxVizualization")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.groupBoxVizualization)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.scrollAreaFaces = QtWidgets.QScrollArea(self.groupBoxVizualization)
        self.scrollAreaFaces.setWidgetResizable(True)
        self.scrollAreaFaces.setObjectName("scrollAreaFaces")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 1133, 382))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout_5.setObjectName("verticalLayout_5")



        self.showFaces()
        # self.triggerDelete()


        self.line = QtWidgets.QFrame(self.scrollAreaWidgetContents)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout_5.addWidget(self.line)
        self.scrollAreaFaces.setWidget(self.scrollAreaWidgetContents)
        self.verticalLayout_8.addWidget(self.scrollAreaFaces)
        self.verticalLayout_.addWidget(self.groupBoxVizualization)
        self.deleteAllButton = QtWidgets.QPushButton(self.faces)
        self.deleteAllButton.setObjectName("deleteAllButton")
        self.verticalLayout_.addWidget(self.deleteAllButton)
        self.addButton = QtWidgets.QPushButton(self.faces)
        self.addButton.setObjectName("addButton")
        self.verticalLayout_.addWidget(self.addButton)
        self.verticalLayout_6.addLayout(self.verticalLayout_)
        self.tab.addTab(self.faces, "")
        self.verticalLayout_2.addWidget(self.tab)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1199, 21))
        self.menubar.setObjectName("menubar")
        self.menuFiles = QtWidgets.QMenu(self.menubar)
        self.menuFiles.setObjectName("menuFiles")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionImport_Image_Set = QtWidgets.QAction(MainWindow)
        self.actionImport_Image_Set.setObjectName("actionImport_Image_Set")
        self.menuFiles.addAction(self.actionImport_Image_Set)
        self.menuFiles.addSeparator()
        self.menuFiles.addAction(self.actionExit)
        self.menubar.addAction(self.menuFiles.menuAction())

        self.retranslateUi(MainWindow)
        self.tab.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.deleteAllButton.setStyleSheet(STYLE_PUSH_BUTTON)
        self.defaultConfigurationsButton.setStyleSheet(STYLE_PUSH_BUTTON)
        self.addButton.setStyleSheet(STYLE_PUSH_BUTTON)
        self.startButton.setStyleSheet(STYLE_PUSH_BUTTON)

        self.spinBoxCameraID.setStyleSheet(STYLE_SPIN_BOX)
        self.spinBoxNameBlue.setStyleSheet(STYLE_SPIN_BOX)
        self.spinBoxNameGreen.setStyleSheet(STYLE_SPIN_BOX)
        self.spinBoxNameRed.setStyleSheet(STYLE_SPIN_BOX)
        self.spinBoxUnknownBlue.setStyleSheet(STYLE_SPIN_BOX)
        self.spinBoxUnknownGreen.setStyleSheet(STYLE_SPIN_BOX)
        self.spinBoxUnknownRed.setStyleSheet(STYLE_SPIN_BOX)
        self.spinBoxNormalBlue.setStyleSheet(STYLE_SPIN_BOX)
        self.spinBoxNormalGreen.setStyleSheet(STYLE_SPIN_BOX)
        self.spinBoxNormalRed.setStyleSheet(STYLE_SPIN_BOX)
        self.screenWidthSpinBox.setStyleSheet(STYLE_SPIN_BOX)
        self.screenHeightSpinBox.setStyleSheet(STYLE_SPIN_BOX)

        self.lineEditIP.setStyleSheet(STYLE_SPIN_BOX)

        self.flipCameraLabel.setStyleSheet(STYLE_FLIP_CAMERA_LABEL)



        """Action decalaration"""
        self.actionExit.triggered.connect(lambda: self.onQuit())
        self.startButton.clicked.connect(lambda: self.onStart())
        self.defaultConfigurationsButton.clicked.connect(lambda: self.onDefaultConfiguration())
        self.radioButtonIP.clicked.connect(lambda: self.switchIPandID())
        self.radioButtonCamID.clicked.connect(lambda: self.switchIPandID())
        self.deleteAllButton.clicked.connect(lambda: self.onDeleteAll())
        self.actionImport_Image_Set.triggered.connect(lambda: self.openImageSetDirectory())
        self.addButton.clicked.connect(lambda: self.addFace())


    """Triggered button's functions"""
    def addFace(self):
        path_image = QFileDialog.getOpenFileName(self.centralwidget, "Choose File", os.path.join("..", ".."), "*.jpg")[0]


        if path_image != ('', ''):
            add_encoding(path_image)
            self.popupMessage("Note", "You added a new face.", QMessageBox.Icon.Information)
            self.clearFaces()
            self.showFaces()

    def popupMessage(self, title, text, icon):
        msg = QMessageBox()
        msg.setWindowTitle(title)
        msg.setText(text)
        msg.setIcon(icon)
        msg.exec()

    def confirmationPopup(self, title, text, icon):
        msg = QMessageBox()
        msg.setWindowTitle(title)
        msg.setText(text)
        msg.setIcon(icon)
        btnYes = QtWidgets.QPushButton(msg)
        btnYes.setText("Yes")
        btnNo = QtWidgets.QPushButton(msg)
        btnNo.setText("No")
        msg.addButton(btnYes, msg.ButtonRole.ActionRole)
        msg.addButton(btnNo, msg.ButtonRole.ActionRole)
        msg.exec()
        res = msg.clickedButton().text()

        return res


    def onQuit(self):
        if(self.confirmationPopup("Confirmation", "Do you really wanna close the application ?", QMessageBox.Icon.Question) == "Yes"):
            sys.exit(app.exec())

    def onStart(self):
        try :
            width = self.screenWidthSpinBox.value()
            height = self.screenHeightSpinBox.value()
            flip_cam = self.flipCameraCheckBox.isChecked()

            if self.radioButtonCamID.isChecked() :
                camID = self.spinBoxCameraID.value()
            else:
                camID = self.lineEditIP.text()

            normal_color = (self.spinBoxNormalBlue.value(), self.spinBoxNormalGreen.value(), self.spinBoxNormalRed.value())
            unknown_color = (self.spinBoxUnknownBlue.value(), self.spinBoxUnknownGreen.value(), self.spinBoxUnknownRed.value())   
            name_color = (self.spinBoxNameBlue.value(), self.spinBoxNameGreen.value(), self.spinBoxNameRed.value())

            main(width, height, flip_cam, camID, normal_color, unknown_color, name_color)
        except:
            msg = QMessageBox()
            msg.setWindowTitle("Warning")
            msg.setText("There is no image in your workspace !")
            msg.setIcon(QMessageBox.Icon.Warning)
            msg.exec()


    def onDefaultConfiguration(self):
        self.screenWidthSpinBox.setValue(WIDTH)
        self.screenHeightSpinBox.setValue(HEIGHT)

        self.spinBoxNormalBlue.setValue(NORMAL_COLOR[0])
        self.spinBoxNormalGreen.setValue(NORMAL_COLOR[1])
        self.spinBoxNormalRed.setValue(NORMAL_COLOR[2])

        self.spinBoxUnknownBlue.setValue(UNKNOWN_COLOR[0])
        self.spinBoxUnknownGreen.setValue(UNKNOWN_COLOR[1])
        self.spinBoxUnknownRed.setValue(UNKNOWN_COLOR[2])

        self.spinBoxNameBlue.setValue(NAME_COLOR[0])
        self.spinBoxNameGreen.setValue(NAME_COLOR[1])
        self.spinBoxNameRed.setValue(NAME_COLOR[2])

        self.flipCameraCheckBox.setChecked(FLIP_CAM)

        msg = QMessageBox()
        msg.setWindowTitle("Default configurations")
        msg.setText("You have set all the parameters to default !")
        msg.setIcon(QMessageBox.Icon.Information)
        msg.exec()


    def switchIPandID(self):
        if self.radioButtonIP.isChecked() :
            enable = True
        else :
            enable = False

        self.lineEditIP.setEnabled(enable)
        self.spinBoxCameraID.setEnabled(not enable)

    def onDeleteAll(self):
        try:
            if platform.system() == LINUX:
                os.system("chmod 777 "+os.join(WORKSPACE, "*"))


            if(self.confirmationPopup("Confirmation", "Do you really wanna delete all the images from your workspace ?", QMessageBox.Icon.Question) == "Yes"):
                length = len(os.listdir(WORKSPACE))-2
                for i in range(length):
                    delete_encoding(0)

                
                msg = QMessageBox()
                msg.setWindowTitle("Workspace")
                msg.setText("Your workspace is clean !")
                msg.setIcon(QMessageBox.Icon.Information)
                msg.exec()

                self.clearFaces()
        except :
            self.popupMessage("Warning", "Run this command 'chmod 777' "+os.path.join(WORKSPACE, "*'"+"in your bash terminal."), QMessageBox.Icon.Warning)
        


    # Clear faces in visualization tab
    def clearFaces(self):
        for widget in self.listWidget:
            widget.setParent(None)
        
        self.listWidget.clear()

        for layout in self.listLayout :
            layout.setParent(None)

        self.listLayout.clear()
        self.listButton.clear()

    def openImageSetDirectory(self):
        try :
            if platform.system() == LINUX:
                os.system("chmod 777 "+os.join(WORKSPACE, "*"))
            dir_path = QFileDialog.getExistingDirectory(self.centralwidget, "Choose Directory", os.path.join("..", ".."))
            self.clearFaces()
            msg = QMessageBox()
            msg.setWindowTitle("Note")
            msg.setText("Wait until your folder is uploaded.")
            msg.setIcon(QMessageBox.Icon.Information)
            msg.exec()

            shutil.rmtree(WORKSPACE)
            shutil.copytree(dir_path, WORKSPACE)
            encodeImageSet(WORKSPACE)

            self.showFaces()
            msg = QMessageBox()
            msg.setWindowTitle("Note")
            msg.setText("Done.")
            msg.setIcon(QMessageBox.Icon.Information)
            msg.exec()

            if platform.system() == LINUX:
                os.system("chmod 777 "+os.join(WORKSPACE, "*"))
        except :
            self.popupMessage("Warning", "Run this command 'chmod 777' "+os.path.join(WORKSPACE, "*'"+"in your bash terminal."), QMessageBox.Icon.Warning)



    def faceWidget(self, name):
        image_path = os.path.join(WORKSPACE, name+".jpg")
        icon_path = os.path.join(ICONS_PATH, "trash.png")


        horizontalLayout_4 = QtWidgets.QHBoxLayout()
        horizontalLayout_4.setObjectName("horizontalLayout_4")

        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        horizontalLayout_4.addItem(spacerItem5)
        photo = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        photo.setMaximumSize(QtCore.QSize(100, 100))
        font = QtGui.QFont()
        font.setPointSize(8)
        photo.setFont(font)
        photo.setStyleSheet("border-radius:1")
        photo.setText("")
        photo.setPixmap(QtGui.QPixmap(image_path))
        photo.setScaledContents(True)
        photo.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        photo.setObjectName("photo")
        horizontalLayout_4.addWidget(photo)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        horizontalLayout_4.addItem(spacerItem6)
        labelName = QtWidgets.QLabel(self.scrollAreaWidgetContents)
        font = QtGui.QFont()
        font.setFamily("HoloLens MDL2 Assets")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        labelName.setFont(font)
        labelName.setAutoFillBackground(False)
        labelName.setStyleSheet("")
        labelName.setObjectName("labelName")
        labelName.setText(name)
        horizontalLayout_4.addWidget(labelName)
        spacerItem7 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        horizontalLayout_4.addItem(spacerItem7)
        pushButtonDeleteItem1 = QtWidgets.QPushButton(self.scrollAreaWidgetContents)
        font = QtGui.QFont()
        font.setFamily("MS Reference Sans Serif")
        font.setPointSize(12)
        font.setBold(False)
        font.setWeight(50)
        pushButtonDeleteItem1.setFont(font)
        pushButtonDeleteItem1.setAutoFillBackground(False)
        pushButtonDeleteItem1.setStyleSheet("")
        pushButtonDeleteItem1.setText("         Delete")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(icon_path), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        pushButtonDeleteItem1.setIcon(icon)
        pushButtonDeleteItem1.setObjectName("pushButtonDeleteItem1")
        horizontalLayout_4.addWidget(pushButtonDeleteItem1)
        spacerItem8 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        horizontalLayout_4.addItem(spacerItem8)

        self.listWidget.extend([photo, labelName, pushButtonDeleteItem1])
        self.listLayout.extend([horizontalLayout_4])
        self.listButton.append(pushButtonDeleteItem1)

        index = self.listButton.index(pushButtonDeleteItem1)
        try :
            pushButtonDeleteItem1.clicked.connect(lambda : self.deleteFace(index))
        except:
            self.popupMessage("Warning", "Run this command 'chmod 777' "+os.path.join(WORKSPACE, "*'"+"in your bash terminal."), QMessageBox.Icon.Warning)


        self.verticalLayout_5.addLayout(horizontalLayout_4)

    def showFaces(self):
        dirs = os.listdir(WORKSPACE)
        if len(dirs) != 0 :
            _, labels = unpickleFiles(WORKSPACE)
            for _, value in labels.items():
                self.faceWidget(value)
        
        
    def deleteFace(self, index):
        delete_encoding(index)
        self.clearFaces()
        self.showFaces()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.labelCam.setText(_translate("MainWindow", "Camera"))
        self.radioButtonIP.setText(_translate("MainWindow", "IP address"))
        self.radioButtonCamID.setText(_translate("MainWindow", "Camera ID"))
        self.flipCameraLabel.setText(_translate("MainWindow", "Flip Camera"))
        self.groupBoxDesign.setTitle(_translate("MainWindow", "Design"))
        self.labelBBoxColor.setText(_translate("MainWindow", "Bounding Box Color"))
        self.spinBoxNormalRed.setPrefix(_translate("MainWindow", "R = "))
        self.spinBoxNormalGreen.setPrefix(_translate("MainWindow", "G = "))
        self.spinBoxNormalBlue.setPrefix(_translate("MainWindow", "B = "))
        self.labelBBoxUnknownFaceColor.setText(_translate("MainWindow", "Bounding Box Unknown Face Color"))
        self.spinBoxUnknownRed.setPrefix(_translate("MainWindow", "R = "))
        self.spinBoxUnknownGreen.setPrefix(_translate("MainWindow", "G = "))
        self.spinBoxUnknownBlue.setPrefix(_translate("MainWindow", "B = "))

        self.labelNameColor.setText(_translate("MainWindow", "Bounding Name Color"))
        self.spinBoxNameRed.setPrefix(_translate("MainWindow", "R = "))
        self.spinBoxNameGreen.setPrefix(_translate("MainWindow", "G = "))
        self.spinBoxNameBlue.setPrefix(_translate("MainWindow", "B = "))

        self.screenWidthLabel.setText(_translate("MainWindow", "Screen width"))
        self.screenHeightLabel.setText(_translate("MainWindow", "Screen height"))
        self.defaultConfigurationsButton.setText(_translate("MainWindow", "Default configurations"))
        self.defaultConfigurationsButton.setShortcut(_translate("MainWindow", "Ctrl+D"))
        self.startButton.setText(_translate("MainWindow", "Start"))
        self.startButton.setShortcut(_translate("MainWindow", "Return"))
        self.tab.setTabText(self.tab.indexOf(self.conf), _translate("MainWindow", "Configurations"))
        self.groupBoxVizualization.setTitle(_translate("MainWindow", "Visualization"))

        self.deleteAllButton.setText(_translate("MainWindow", "Delete All"))
        self.deleteAllButton.setShortcut(_translate("MainWindow", "Ctrl+Del"))
        self.addButton.setText(_translate("MainWindow", "Add"))
        self.addButton.setShortcut(_translate("MainWindow", "Ctrl+A"))
        self.tab.setTabText(self.tab.indexOf(self.faces), _translate("MainWindow", "Faces"))
        self.menuFiles.setTitle(_translate("MainWindow", "File"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionExit.setShortcut(_translate("MainWindow", "Ctrl+Q"))
        self.actionImport_Image_Set.setText(_translate("MainWindow", "Import Image Set"))
        self.actionImport_Image_Set.setShortcut(_translate("MainWindow", "Ctrl+N"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
